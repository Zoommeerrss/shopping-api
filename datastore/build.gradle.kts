/*
 * This file was generated by the Gradle 'init' task.
 */
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    `java-library`
    id("org.springframework.boot")
    id("io.spring.dependency-management") version "1.0.12.RELEASE"
    kotlin("jvm")
    kotlin("plugin.spring")
    kotlin("plugin.jpa")
    kotlin("plugin.allopen")
    id("info.solidsoft.pitest") version "1.7.4"
}

group = "shopping.datastore"
version = "1.0-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {

    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // migrations
    //implementation("org.flywaydb:flyway-core:9.1.6")

    // postgres
    implementation("org.postgresql:postgresql:42.5.0")

    // DynamoBD
    implementation("com.amazonaws:aws-java-sdk-dynamodb:1.12.290")

    implementation("org.hibernate:hibernate-core:6.1.2.Final")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    implementation(kotlin("script-runtime"))

    // Use JUnit Jupiter for testing.
    testImplementation(platform("org.junit:junit-bom:5.8.2"))
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")
    testImplementation("org.junit.platform:junit-platform-launcher:1.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.0")

    // mockk
    testImplementation("io.mockk:mockk:1.9.3")

    // projects
    implementation(project(":core"))

}

apply(plugin = "info.solidsoft.pitest")
apply(plugin = "io.spring.dependency-management")

the<io.spring.gradle.dependencymanagement.dsl.DependencyManagementExtension>().apply {
    imports {
        mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    }
}

tasks.test {
    useJUnitPlatform()
    dependsOn(":datastore:pitest")
}

tasks.withType<KotlinCompile>() {
    kotlinOptions.jvmTarget = "11"
}

tasks.withType<KotlinCompile> {
    kotlinOptions {
        freeCompilerArgs = listOf("-Xjsr305=strict", "-Xemit-jvm-type-annotations")
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

tasks.getByName<org.springframework.boot.gradle.tasks.bundling.BootJar>("bootJar") {
    enabled = false
}

pitest {
    targetClasses.add("com.shoppingapi.*")
    targetTests.add("com.shoppingapi.*Test")
    testSourceSets.add(sourceSets.test)
    mainSourceSets.add(sourceSets.main)
    jvmArgs.addAll("-Xmx1024m", "-Dspring.test.constructor.autowire.mode=all")
    useClasspathFile.set(true)     //useful with bigger projects on Windows
    fileExtensionsToFilter.addAll("xml", "orbit")
    outputFormats.addAll("XML", "HTML")
    timestampedReports.set(false)
    junit5PluginVersion.set("0.15")
    exportLineCoverage.set(true)
}